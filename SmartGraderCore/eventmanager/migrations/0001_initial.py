# Generated by Django 2.1.8 on 2019-06-19 07:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('coursemanager', '0001_initial'),
        ('assignmentmanager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(default='1', max_length=100, unique=True)),
                ('grade_aggregation_method', models.CharField(max_length=50, null=True)),
                ('is_external', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assignmentmanager.Assignment')),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='GradingDuty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('marks_adjustment', models.IntegerField(null=True)),
                ('is_regrading', models.BooleanField(default=False)),
                ('grader_comment', models.CharField(blank=True, max_length=200, null=True)),
                ('student_comment', models.CharField(blank=True, max_length=200, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('aggregate_marks', models.IntegerField(null=True)),
                ('is_late_grading', models.BooleanField(default=False)),
                ('is_aggregate_marks_dirty', models.BooleanField(default=False)),
                ('grader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coursemanager.Enrollment')),
            ],
            options={
                'db_table': 'grading_duties',
            },
        ),
        migrations.CreateModel(
            name='GradingdutyHasRubrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('gradingduty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.GradingDuty')),
                ('rubric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignmentmanager.Rubric')),
            ],
            options={
                'db_table': 'grading_duty_has_rubrics',
            },
        ),
        migrations.CreateModel(
            name='Subevent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('display_end_time', models.DateTimeField()),
                ('allow_late_ending', models.BooleanField()),
                ('late_end_time', models.DateTimeField(null=True)),
                ('display_late_end_time', models.DateTimeField(null=True)),
                ('is_blocking', models.BooleanField()),
                ('participants_spec', models.BooleanField(null=True)),
                ('params', models.CharField(max_length=300, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subevents', to='eventmanager.Event')),
            ],
            options={
                'db_table': 'subevents',
            },
        ),
        migrations.CreateModel(
            name='SubmissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('access_code_gold', models.CharField(blank=True, max_length=50, null=True)),
                ('access_code_submitted', models.BooleanField(default=False)),
                ('is_late_submission', models.BooleanField(default=False)),
                ('choosen_question_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assignmentmanager.QuestionSet')),
            ],
            options={
                'db_table': 'submission_groups',
            },
        ),
        migrations.CreateModel(
            name='SubmissionGroupHasUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coursemanager.Enrollment')),
                ('submission_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.SubmissionGroup')),
            ],
            options={
                'db_table': 'submission_group_has_users',
            },
        ),
        migrations.CreateModel(
            name='SubmissionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_page_no', models.IntegerField(null=True)),
                ('upload_coords', models.CharField(blank=True, max_length=50, null=True)),
                ('response_text', models.CharField(blank=True, max_length=200, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignmentmanager.Question')),
                ('submission_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.SubmissionGroup')),
            ],
            options={
                'db_table': 'responses',
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('file_path', models.FileField(blank=True, upload_to='')),
                ('file_size', models.IntegerField()),
                ('is_successful_upload', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(null=True)),
                ('uploader_ip', models.CharField(max_length=100, null=True)),
                ('is_bulk_upload', models.BooleanField(default=False)),
                ('is_paginated', models.BooleanField(default=False)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coursemanager.Enrollment')),
            ],
            options={
                'db_table': 'uploads',
            },
        ),
        migrations.CreateModel(
            name='UserHasSubevents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coursemanager.Enrollment')),
                ('subevent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.Subevent')),
            ],
            options={
                'db_table': 'user_has_subevents',
            },
        ),
        migrations.AddField(
            model_name='submissionresponse',
            name='upload',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.Upload'),
        ),
        migrations.AddField(
            model_name='submissiongroup',
            name='enrollments',
            field=models.ManyToManyField(through='eventmanager.SubmissionGroupHasUser', to='coursemanager.Enrollment'),
        ),
        migrations.AddField(
            model_name='submissiongroup',
            name='subevent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.Subevent'),
        ),
        migrations.AddField(
            model_name='submissiongroup',
            name='upload_id_main',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='eventmanager.Upload'),
        ),
        migrations.AddField(
            model_name='submissiongroup',
            name='upload_id_supp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_supp', to='eventmanager.Upload'),
        ),
        migrations.AddField(
            model_name='gradingduty',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.SubmissionResponse'),
        ),
        migrations.AddField(
            model_name='gradingduty',
            name='subevent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventmanager.Subevent'),
        ),
    ]
