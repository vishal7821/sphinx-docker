"""
Django settings for SmartGrader project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')=muegtuzjr7+i7pa!ta*n+$s#2azy9o=o@m^q@f0zr)mbt@62'
CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    '40.76.1.187'
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['XXX.iptime.org', 'localhost', '127.0.0.1', 'app', '40.76.1.187']

# Application definition
# change : not using default admin , auth and contenttype
INSTALLED_APPS = [
    #'django.contrib.admin',
    #'django.contrib.auth',
    #'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'safedelete',   # change : This is used for soft delete in the tables
    'rest_framework',
    'authentication',
    'coursemanager',
    'assignmentmanager',
    'eventmanager'
]

# change : not using default authentication
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'authentication.csrf_middleware.CsrfValidationMiddleware',
    'authentication.authentication_middleware.AuthenticationMiddleware',
    'authentication.authorization_middleware.AuthorizationMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'multidb.middleware.MultiDbRouterMiddleware',
]

ROOT_URLCONF = 'SmartGrader.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SmartGrader.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
#default should always be global table
# database setting for local dev env
DATABASES = {
     'global': {
         'ENGINE': 'django.db.backends.mysql',
         'NAME': 'smartgrader_test_global',
         'USER': 'root',
         'PASSWORD': 'Secret@123',
         'HOST': '127.0.0.1',  # Or an IP Address that your DB is hosted on
         'PORT': '3306',
         'OPTIONS': {
             "init_command": "SET foreign_key_checks = 0;",
         },
     },
     '1_db': {
             'ENGINE': 'django.db.backends.mysql',
             'NAME': 'smartgrader_test_cs771',
             'USER': 'root',
             'PASSWORD': 'Secret@123',
             'HOST': '127.0.0.1',  # Or an IP Address that your DB is hosted on
             'PORT': '3306',
             'OPTIONS': {
                 "init_command": "SET foreign_key_checks = 0;",
             },
     },
     '2_db': {
         'ENGINE': 'django.db.backends.mysql',
         'NAME': 'smartgrader_test_cs772',
         'USER': 'root',
         'PASSWORD': 'Secret@123',
         'HOST': '127.0.0.1',  # Or an IP Address that your DB is hosted on
         'PORT': '3306',
         'OPTIONS': {
                         "init_command": "SET foreign_key_checks = 0;",
                     },
     },
     'default': {
         'ENGINE': 'django.db.backends.mysql',
             'NAME': 'smartgrader_test_global', #change it to global, changed this to run shell
             'USER': 'root',
             'PASSWORD': 'Secret@123',
             'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
             'PORT': '3306',
             'OPTIONS': {
                             "init_command": "SET foreign_key_checks = 0;",
                         },
     }
 }
 #default is cs771 for testing


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
#default should always be global table
#database setting for docker
#DATABASES = {
#    'global': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'smartgrader_test_global',
        # 'USER': 'root',
        # 'PASSWORD': '',
#        'USER': 'root',
#        'PASSWORD': 'secret123',
#        'HOST': 'db',   # Or an IP Address that your DB is hosted on
#        'PORT': '3306',
#    },
#    '1_db': {
#            'ENGINE': 'django.db.backends.mysql',
#            'NAME': 'smartgrader_test_cs771',
            # 'USER': 'root',
            # 'PASSWORD': '',
            #'USER': 'root',
#            'PASSWORD': 'secret123',
#            'HOST': 'db',   # Or an IP Address that your DB is hosted on
#            'PORT': '3306',
#    },
#    '2_db': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'smartgrader_test_cs772',
        # 'USER': 'root',
        # 'PASSWORD': '',
#        'USER': 'root',
#        'PASSWORD': 'secret123',
#        'HOST': 'db',  # Or an IP Address that your DB is hosted on
#        'PORT': '3306',
#    },
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #         'NAME': 'smartgrader_test_global', #change it to global, changed this to run shell
    #         'USER': 'root',
    #         'PASSWORD': '',
    #         'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
    #         'PORT': '3307',
    # }
#    'default': {
#           'ENGINE': 'django.db.backends.mysql',
#            'NAME': 'smartgrader_test_global',
#            'USER': 'root',
#            'PASSWORD': 'secret123',
#            'HOST': 'db',
#            'PORT': '3306',
#            'OPTIONS': {'charset': 'utf8mb4'},
#       }
#}
#default is cs771 for testing



# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# Change: adding custom routing to route to different db based on courseId
DATABASE_ROUTERS = ['multidb.router.MultiDbRouter']


# # caching setting for local dev env
CACHES = {
     'default': {
         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
         'LOCATION': '127.0.0.1:11211',  #127.0.0.1 to memcached
         'KEY_PREFIX': 'sessions',
         'TIMEOUT':  None,
     }
 }

# caching setting for docker
#CACHES = {
#    'default': {
#        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#        'LOCATION': 'memcached:11211',  #127.0.0.1 to memcached
#        'KEY_PREFIX': 'sessions',
#        'TIMEOUT':  None,
#    }
#}

# session is valid for 2 hrs
SESSION_COOKIE_AGE = 2*60*60
# SESSION_COOKIE_AGE = 20
SESSION_ENGINE = "django.contrib.sessions.backends.cache"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [],
    'UNAUTHENTICATED_USER':None
}



#------------Global Constants-------------------

# password reset mail
PASSWORD_RESET_SUBJECT = "SmartGrader Password Reset Token"
PASSWORD_RESET_BODY = "Use this token to reset password for smartgrader. Don't share this token"


# new user creation email
CREATE_USER_SUBJECT = "Smart Grading Registration"
CREATE_USER_BODY = "Use the following credentials to login, Change the password immediately"


#email config
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'smartgrading9923@gmail.com'
EMAIL_HOST_PASSWORD = '1234_asdf'
DEFAULT_EMAIL_FROM = 'smartgrading9923@gmail.com'





#student enrollment csv column names
CSV_USERNAME = 'username'
CSV_FIRST_NAME = 'first_name'
CSV_LAST_NAME = 'last_name'
CSV_EMAIL_ID = 'email'
CSV_DEPARTMENT = 'department'
CSV_PROGRAM = 'program'
CSV_ROLE = 'role'
CSV_SECTION_LIST = 'sections'


#files config
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# csrf
CSRF_SESSION_KEY = '_csrftoken'
CSRF_HEADER_NAME = 'HTTP_CSRF_TOKEN'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# exclude from authentication middleware
EXCLUDE_FROM_MY_MIDDLEWARE = set(['authentication.views.password_reset.PasswordResetView',
                                    'authentication.views.login.LoginView',
                                  'authentication.views.csrf.CsrfTokenView'])

EXCLUDE_FROM_AUTHR_MIDDLEWARE = set(['authentication.views.password_reset.PasswordResetView',
                                        'authentication.views.login.LoginView',
                                        'authentication.views.csrf.CsrfTokenView',

                                        'authentication.views.logout.LogoutView',
                                        'authentication.views.password_change.PasswordChangeView',
                                        'authentication.views.account.AccountDetail',
                                     'coursemanager.views.course.CourseList',
                                     ])